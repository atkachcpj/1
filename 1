<html>

<head>
  <meta charset="utf-8">
  <title>Display a popup on hover</title>
  <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
  <link href="https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.css" rel="stylesheet">
  <script src="https://api.mapbox.com/mapbox-gl-js/v2.14.1/mapbox-gl.js"></script>
  <style>
    body {
      margin: 0;
      padding: 0;
    }

    #map {
      position: absolute;
      top: 0;
      bottom: 0;
      width: 100%;
    }
  </style>
</head>

<body>
  <style>
    .mapboxgl-popup {
      max-width: 50px;
      font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
    }
  </style>
  <div id="map"></div>
  <script>
    mapboxgl.accessToken = 'pk.eyJ1IjoiYXRrYWNoY3BqIiwiYSI6ImNsZnZiNDZqNDAxNjYzZmxibTdlNXRzeDMifQ.OMpqfdmn7GtvpmaRFWYERA';
    const map = new mapboxgl.Map({
      container: 'map',
      // Choose from Mapbox's core styles, or make your own style with Mapbox Studio
      style: 'mapbox://styles/mapbox/light-v11',
      projection: 'mercator',
      center: [20, 38.907],
      zoom: 1.5
    });
    map.on('load', () => {
      map.addSource('places', {
        'type': 'geojson',
        'data': {
          'type': 'FeatureCollection',
          'features': [{
            'type': 'Feature',
            'properties': {
              'description': '<strong><a style="text-decoration:none"  href="https://cpj.org/2023/09/cpj-safety-advisory-covering-libyas-floods/" target="_blank">CPJ Safety Advisory: Covering Libyaâ€™s floods</strong></p>'
            },
            'geometry': {
              'type': 'Point',
              'coordinates': [22.6377, 32.7556]
            }
          }]
        }
      });
      // Add a layer showing the places.
      map.addLayer({
        'id': 'places',
        'type': 'circle',
        'source': 'places',
        'paint': {
          'circle-color': '#D43837',
          'circle-radius': 6,
          'circle-stroke-width': 2,
          'circle-stroke-color': '#D43837'
        }
      });
      // When a click event occurs on a feature in the places layer, open a popup at the
      // location of the feature, with description HTML from its properties.
      map.on('click', 'places', (e) => {
        // Copy coordinates array.
        const coordinates = e.features[0].geometry.coordinates.slice();
        const description = e.features[0].properties.description;
        // Ensure that if the map is zoomed out such that multiple
        // copies of the feature are visible, the popup appears
        // over the copy being pointed to.
        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
        }
        new mapboxgl.Popup()
          .setLngLat(coordinates)
          .setHTML(description)
          .addTo(map);
      });
      // Change the cursor to a pointer when the mouse is over the places layer.
      map.on('mouseenter', 'places', () => {
        map.getCanvas().style.cursor = 'pointer';
      });
      // Change it back to a pointer when it leaves.
      map.on('mouseleave', 'places', () => {
        map.getCanvas().style.cursor = '';
      });
    });
  </script>

</body>

</html>
